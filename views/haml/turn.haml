/ Yes, this is messy and stupid. I'll write a helper method later
- @mzw = settings.mzw
%li{:id => "turn_#{@mzw.player.stats[:turns].to_s}"}
  - if @mzw.output_hash[:win]
    .win
      %p= @mzw.output_hash[:win]
  - if @mzw.output_hash[:lose]
    .lose
      %p= @mzw.output_hash[:lose]
  - if @mzw.output_hash[:grue_move]
    .grue_move
      %p= @mzw.output_hash[:grue_move]
  - if @mzw.output_hash[:rest]
    .rest
      %p= @mzw.output_hash[:rest]
  - else
    - unless @mzw.game_over
      %div{:class => "look #{@mzw.player.room.color.to_s.delete(' ')}"}
        .start
          %p= @mzw.output_hash[:start] unless nil
        .room_description
          %p= @mzw.output_hash[:look]
        - unless @mzw.output_hash[:sense].nil?
          .sense
            %ul
              - @mzw.output_hash[:sense].each_value do |sense|
                %li= sense
        .exits
          %p
            EXITS:
            - @mzw.output_hash[:exits].each do |exit|
              = exit.upcase
  - if @mzw.output_hash[:loot]
    .loot
      %p=
        "* #{@mzw.output_hash[:loot]} *"
  - if @mzw.output_hash[:grue_flees]
    .grue_flees
      %p= @mzw.output_hash[:grue_flees]
  - if @mzw.output_hash[:move]
    .move
      %p= @mzw.output_hash[:move]