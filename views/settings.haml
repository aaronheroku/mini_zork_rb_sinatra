- rooms = settings.mzw.map.rooms
- game_settings = settings.mzw.game_settings
%form{:id=>"settingsForm", :action=>"/", :method=>"post"}
  %table
    - loop_hash = {:randomize_player_start => :player, :randomize_grue_start => :grue, :randomize_goal => :goal }

    - loop_hash.each do | cb_id, select_id |
      %tr
        %td
          %label
            = cb_id.to_s.tr("_", " ").capitalize
        %td{ :class=> select_id.to_s }
          <input 
          type ="checkbox"
          name="#{ cb_id.to_s }"
          class="room_setting_cb"
          \#{'checked="checked"' if game_settings[cb_id]}
          >
      %tr
        %td
          %label
            = "#{select_id.to_s.capitalize} room"
        %td{ :class => select_id.to_s }
          <select 
          name="#{ select_id.to_s + '_room' }" 
          class="room_select" 
          \#{'disabled="disabled"' if game_settings[cb_id]}
          >
          - rooms.each_key do |key|
            <option 
            value="#{ key.to_s }" 
            class="#{ key.to_s.delete(' ') }"
            \#{'selected="selected"' if rooms[key].flags[select_id]}
            >
            = key.to_s.capitalize
    %tr
      %td
        Random gems
      %td
        <input
        type="checkbox"
        name="random_gems"
        class="random_gems_cb"
        \#{'checked="checked"' if game_settings[:random_gems]}
        >
    %tr
      %td
        Random gem odds:
      %td
        1 in <input
        type="number"
        name="random_gem_chance"
        class="random_gem_chance"
        min=1
        max=100
        value="#{settings.mzw.game_settings[:random_gem_chance]}"
        \#{"disabled='disabled'" unless game_settings[:random_gems]}
        >
    %tr
      %td
        Gems required
      %td
        %input{:max => "100", :min => "1", :name => "gems_required", :type => "number", :value => game_settings[:gems_required]}
    %tr
      %td
        Turns between rest
      %td
        %input{:max => "100", :min => "1", :name => "turns_between_rest", :type => "number", :value => game_settings[:turns_between_rest]}
    / checkboxes for player hints (grue sense, gem sense, etc)
    - settings.mzw.player.settings.each_key do |setting|
      %tr
        %td
          %label
            = setting.to_s
        %td
          <input
          type="checkbox"
          name="#{setting.to_s}"
          class="player_hint_cb"
          \#{'checked="checked"' if settings.mzw.player.settings[setting]}
          >
  %button{:type => "submit"} Submit