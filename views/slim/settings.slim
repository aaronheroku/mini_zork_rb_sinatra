- rooms = settings.mzw.map.rooms
- game_settings = settings.mzw.game_settings
form action="/" id="settingsForm" method="post"
  table
    - loop_hash = {:randomize_player_start => :player, 
                   :randomize_grue_start => :grue, 
                   :randomize_goal => :goal }
    - loop_hash.each do | cb_id, select_id |
      tr
        td
          label = cb_id.to_s.tr("_"," ").capitalize
        td class=select_id.to_s
          input.room_setting_cb[ 
            name="#{cb_id.to_s}" 
            type="checkbox" 
            checked=("checked" if game_settings[cb_id])]
      tr
        td
          label = "#{select_id.to_s.capitalize} room"
        td class=select_id.to_s
          select.room_select[
            name="#{select_id.to_s}_room"
            disabled=("disabled" if game_settings[cb_id])]
            - rooms.each_key do |key|
              option[ class=key.to_s.delete(' ')
                selected=("selected" if rooms[key].flags[select_id])]
                = key.to_s.capitalize
    tr
      td Random Gems
      td
        input.random_gems_cb[
          type="checkbox"
          name="random_gems"
          checked=("checked" if game_settings[:random_gems])]
    tr
      td Random Gem Odds:
      td 
        | 1 in 
        input.random_gem_chance[type="number" min="1" max="100"
          name="random_gem_chance"
          value=game_settings[:random_gem_chance]
          disabled=("disabled" unless game_settings[:random_gems])]
    tr
      td Turns Between Rest
      td
        input.rest_cd[type="number" min="1" max="100"
          name="turns_between_rest"
          value=game_settings[:turns_between_rest]]
    - settings.mzw.player.settings.each_key do |setting|
      tr
        td
          label = setting.to_s
        td
          input.player_hint_cb[
            type="checkbox"
            name=setting.to_s
            checked=("checked" if settings.mzw.player.settings[setting])]
  button type="submit" Submit
